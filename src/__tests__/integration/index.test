import { writeFileSync, unlinkSync } from 'fs';

import { convertProtoToGlueSchema } from '../../index';

describe('Proto to Glue Integration Tests', () => {
  const testProtoFile = 'test_message.proto';

  beforeAll(() => {
    // Create a test proto file
    const protoContent = `
      syntax = "proto3";
      package test;

      message Person {
        string name = 1;
        int32 age = 2;
        repeated string hobbies = 3;
        Address address = 4;

        message Address {
          string street = 1;
          string city = 2;
          string country = 3;
        }
      }
    `;

    writeFileSync(testProtoFile, protoContent);
  });

  afterAll(() => {
    // Cleanup test file
    unlinkSync(testProtoFile);
  });

  it('should convert a complete proto file correctly', () => {
    const result = convertProtoToGlueJSONSchema(testProtoFile, 'Person');
    console.log(result);
    // expect(result).toEqual({
    //   columns: [
    //     { name: 'name', type: 'string' },
    //     { name: 'age', type: 'int' },
    //     {
    //       name: 'hobbies',
    //       type: 'array',
    //       elementType: 'string',
    //     },
    //     {
    //       name: 'address',
    //       type: 'struct',
    //       fields: [
    //         { name: 'street', type: 'string' },
    //         { name: 'city', type: 'string' },
    //         { name: 'country', type: 'string' },
    //       ],
    //     },
    //   ],
    // });
  });

  // it('should handle missing message gracefully', () => {
  //   expect(() => {
  //     convertProtoToGlue(testProtoFile, 'NonExistentMessage');
  //   }).toThrow('Message NonExistentMessage not found in proto file');
  // });
});
